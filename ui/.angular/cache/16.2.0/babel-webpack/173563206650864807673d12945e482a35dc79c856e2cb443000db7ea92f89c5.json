{"ast":null,"code":"var _class;\nimport { nf_building } from '../data/buildings';\nimport { Subject } from 'rxjs';\nimport { nf_project } from '../data/projects';\nimport * as i0 from \"@angular/core\";\nexport class FilterServiceService {\n  filterProjects(projectList) {\n    if (Array.isArray(projectList)) {\n      let filteredProjectList = projectList.map(project => project.nf_projectid);\n      this.filteredProjects = this.projects.filter(project => filteredProjectList.includes(project.nf_projectid));\n    }\n  }\n  filterBuildings(buildingList) {\n    let filteredBuildingsList = buildingList.map(building => building.nf_buildingid);\n    this.filteredBuildings$.next(this.buildings.filter(building => filteredBuildingsList.includes(building.nf_buildingid)));\n  }\n  constructor() {\n    this.projects = nf_project;\n    this.buildings = nf_building;\n    this.filteredBuildings$ = new Subject();\n  }\n}\n_class = FilterServiceService;\n_class.ɵfac = function FilterServiceService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["nf_building","Subject","nf_project","FilterServiceService","filterProjects","projectList","Array","isArray","filteredProjectList","map","project","nf_projectid","filteredProjects","projects","filter","includes","filterBuildings","buildingList","filteredBuildingsList","building","nf_buildingid","filteredBuildings$","next","buildings","constructor","factory","ɵfac","providedIn"],"sources":["F:\\Программирование\\Обучение\\Angular\\Nikfort-Test-App\\src\\app\\services\\filter-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Building } from '../models/building';\nimport { nf_building } from '../data/buildings';\nimport { Subject } from 'rxjs';\nimport { Project } from '../models/project';\nimport { nf_project } from '../data/projects';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterServiceService {\n\n  projects: Project[] = nf_project;\n  buildings: Building[] = nf_building;\n\n  public filteredProjects: Project[];\n  public filteredBuildings$ = new Subject<Building[]>();\n\n  filterProjects(projectList: Project[]){\n    if(Array.isArray(projectList)){\n      let filteredProjectList = projectList.map(project => project.nf_projectid)\n      this.filteredProjects = this.projects.filter(project => filteredProjectList.includes(project.nf_projectid))\n    }\n  }\n\n  filterBuildings(buildingList: Building[]) {\n    let filteredBuildingsList = buildingList.map(building => building.nf_buildingid);\n    this.filteredBuildings$.next(this.buildings.filter(building => filteredBuildingsList.includes(building.nf_buildingid)));\n  }\n\n  constructor() {\n   }\n}\n"],"mappings":";AAEA,SAASA,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,OAAO,QAAQ,MAAM;AAE9B,SAASC,UAAU,QAAQ,kBAAkB;;AAK7C,OAAM,MAAOC,oBAAoB;EAQ/BC,cAAcA,CAACC,WAAsB;IACnC,IAAGC,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,EAAC;MAC5B,IAAIG,mBAAmB,GAAGH,WAAW,CAACI,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,YAAY,CAAC;MAC1E,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACC,QAAQ,CAACC,MAAM,CAACJ,OAAO,IAAIF,mBAAmB,CAACO,QAAQ,CAACL,OAAO,CAACC,YAAY,CAAC,CAAC;;EAE/G;EAEAK,eAAeA,CAACC,YAAwB;IACtC,IAAIC,qBAAqB,GAAGD,YAAY,CAACR,GAAG,CAACU,QAAQ,IAAIA,QAAQ,CAACC,aAAa,CAAC;IAChF,IAAI,CAACC,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAACC,SAAS,CAACT,MAAM,CAACK,QAAQ,IAAID,qBAAqB,CAACH,QAAQ,CAACI,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC;EACzH;EAEAI,YAAA;IAlBA,KAAAX,QAAQ,GAAcX,UAAU;IAChC,KAAAqB,SAAS,GAAevB,WAAW;IAG5B,KAAAqB,kBAAkB,GAAG,IAAIpB,OAAO,EAAc;EAepD;;SArBUE,oBAAoB;;mBAApBA,MAAoB;AAAA;;SAApBA,MAAoB;EAAAsB,OAAA,EAApBtB,MAAoB,CAAAuB,IAAA;EAAAC,UAAA,EAFnB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}