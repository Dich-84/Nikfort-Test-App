{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.downloadFloor().subscribe(floors => {\n      this.floors = floors;\n      console.log(this.floors);\n    });\n  }\n  download() {\n    return this.http.get('http://localhost:64382/api/projects');\n  }\n  downloadFloor() {\n    return this.http.get('http://localhost:64382/api/floors');\n  }\n}\n_class = DataService;\n_class.ɵfac = function DataService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["DataService","constructor","http","downloadFloor","subscribe","floors","console","log","download","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["F:\\Программирование\\Обучение\\Angular\\Nikfort-Test-App\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Project } from '../models/project';\nimport { Floor } from '../models/floor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  floors: Floor[]\n\n  constructor(private http: HttpClient) {\n    this.downloadFloor().subscribe(floors => {\n      this.floors = floors\n      console.log(this.floors)\n    })\n  }\n\n  download(): Observable<Project[]> {\n    return this.http.get<Project[]>('http://localhost:64382/api/projects')\n  }\n\n  downloadFloor(): Observable<Floor[]> {\n    return this.http.get<Floor[]>('http://localhost:64382/api/floors')\n  }\n}\n"],"mappings":";;;AASA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,aAAa,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACtC,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,MAAM,CAAC;IAC1B,CAAC,CAAC;EACJ;EAEAG,QAAQA,CAAA;IACN,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAY,qCAAqC,CAAC;EACxE;EAEAN,aAAaA,CAAA;IACX,OAAO,IAAI,CAACD,IAAI,CAACO,GAAG,CAAU,mCAAmC,CAAC;EACpE;;SAjBWT,WAAW;;mBAAXA,MAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXb,MAAW;EAAAc,OAAA,EAAXd,MAAW,CAAAe,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}