{"ast":null,"code":"var _class;\nimport { nf_building } from '../data/buildings';\nimport { Subject } from 'rxjs';\nimport { nf_project } from '../data/projects';\nimport * as i0 from \"@angular/core\";\nexport class FilterServiceService {\n  filterBuildings(buildingList) {\n    let filteredBuildingsList = buildingList.map(building => building.nf_buildingid);\n    this.filteredBuildings$.next(this.buildings.filter(building => filteredBuildingsList.includes(building.nf_buildingid)));\n  }\n  constructor() {\n    this.projects = nf_project;\n    this.buildings = nf_building;\n    this.filteredBuildings$ = new Subject();\n  }\n}\n_class = FilterServiceService;\n_class.ɵfac = function FilterServiceService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["nf_building","Subject","nf_project","FilterServiceService","filterBuildings","buildingList","filteredBuildingsList","map","building","nf_buildingid","filteredBuildings$","next","buildings","filter","includes","constructor","projects","factory","ɵfac","providedIn"],"sources":["F:\\Программирование\\Обучение\\Angular\\Nikfort-Test-App\\src\\app\\services\\filter-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Building } from '../models/building';\nimport { nf_building } from '../data/buildings';\nimport { Subject } from 'rxjs';\nimport { Project } from '../models/project';\nimport { nf_project } from '../data/projects';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterServiceService {\n\n  projects: Project[] = nf_project;\n  buildings: Building[] = nf_building;\n\n  public filteredBuildings$ = new Subject<Building[]>();\n\n  filterBuildings(buildingList: Building[]) {\n    let filteredBuildingsList = buildingList.map(building => building.nf_buildingid);\n    this.filteredBuildings$.next(this.buildings.filter(building => filteredBuildingsList.includes(building.nf_buildingid)));\n  }\n\n  constructor() {\n   }\n}\n"],"mappings":";AAEA,SAASA,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,OAAO,QAAQ,MAAM;AAE9B,SAASC,UAAU,QAAQ,kBAAkB;;AAK7C,OAAM,MAAOC,oBAAoB;EAO/BC,eAAeA,CAACC,YAAwB;IACtC,IAAIC,qBAAqB,GAAGD,YAAY,CAACE,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACC,aAAa,CAAC;IAChF,IAAI,CAACC,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAACC,SAAS,CAACC,MAAM,CAACL,QAAQ,IAAIF,qBAAqB,CAACQ,QAAQ,CAACN,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC;EACzH;EAEAM,YAAA;IAVA,KAAAC,QAAQ,GAAcd,UAAU;IAChC,KAAAU,SAAS,GAAeZ,WAAW;IAE5B,KAAAU,kBAAkB,GAAG,IAAIT,OAAO,EAAc;EAQpD;;SAbUE,oBAAoB;;mBAApBA,MAAoB;AAAA;;SAApBA,MAAoB;EAAAc,OAAA,EAApBd,MAAoB,CAAAe,IAAA;EAAAC,UAAA,EAFnB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}